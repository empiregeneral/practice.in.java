package cn.edu.hdu.acm.problem1211;import cn.hutool.core.codec.Base64Encoder;import org.junit.Assert;import javax.crypto.Cipher;import java.security.*;public class RSA {    public static void main(String[] args) {        try {            KeyPairGenerator generator = KeyPairGenerator.getInstance("RSA");            generator.initialize(4096);            KeyPair keyPair = generator.generateKeyPair();            PublicKey pubKey = keyPair.getPublic();            PrivateKey priKey = keyPair.getPrivate();            System.out.println("PublicKey: " + new Base64Encoder().encode(pubKey.getEncoded()));            System.out.println("PrivateKey: " + new Base64Encoder().encode(priKey.getEncoded()));            String plainText = "BHJ-ACQUIRED-A-BRIEFCASE-COMPANY.";            byte[] cipherText = encrypt(plainText.getBytes(), pubKey);            System.out.println("CipherText: " + new Base64Encoder().encode(cipherText));            byte[] decipherText = decrypt(cipherText, priKey);            System.out.println("DecipherText: " + new String(decipherText));            Assert.assertEquals(new String(plainText.getBytes()), new String(decipherText));        } catch (Exception e) {            e.printStackTrace();        }    }    /**     * @param plainText     * @param publicKey     * @return     * @Description 明文和公钥进行加密     */    private static byte[] encrypt(byte[] plainText, PublicKey publicKey) throws Exception {        Cipher cipher = Cipher.getInstance("RSA");        cipher.init(Cipher.ENCRYPT_MODE, publicKey);        return cipher.doFinal(plainText);    }    /**     * @Description 密文和私钥解密     * @param cipherText     * @param priKey     * @return     * @throws Exception     */    private static byte[] decrypt(byte[] cipherText, PrivateKey priKey) throws Exception {        Cipher cipher = Cipher.getInstance("RSA");        cipher.init(Cipher.DECRYPT_MODE, priKey);        return cipher.doFinal(cipherText);    }}